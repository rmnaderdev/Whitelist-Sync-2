description = "WhitelistSyncCore"

group = mod_group_id + ".core"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    compileOnly "com.google.code.gson:gson:2.8.9"
    compileOnly "org.apache.maven:maven-artifact:3.6.3"
    shade 'com.squareup.okhttp3:okhttp:[4.12.0,5.0)'
    shade 'com.microsoft.signalr:signalr:7.0.0'
    shade 'com.electronwill.night-config:toml:3.6.0'
    shade 'org.slf4j:slf4j-simple:1.7.30'
}

jar {
    archiveClassifier = 'unshaded'
}

var shadeRelocateGroup = 'net.rmnad.core.shade'

shadowJar {
    dependencies {
        exclude(dependency('org.jetbrains:annotations'))
    }
    relocate('okhttp3', "${shadeRelocateGroup}.okhttp3")
    relocate('com.microsoft', "${shadeRelocateGroup}.com.microsoft")
    relocate('okio', "${shadeRelocateGroup}.okio")
    relocate('org.json', "${shadeRelocateGroup}.org.json")
    relocate('kotlin', "${shadeRelocateGroup}.kotlin")
    relocate('com.google.gson', "${shadeRelocateGroup}.com.google.gson")
    relocate('io.reactivex', "${shadeRelocateGroup}.io.reactivex")
    relocate('org.reactivestreams', "${shadeRelocateGroup}.org.reactivestreams")
    relocate('org.slf4j', "${shadeRelocateGroup}.org.slf4j")
    relocate('com.electronwill.nightconfig', "${shadeRelocateGroup}.com.electronwill.nightconfig")

    archiveBaseName = "WhitelistSyncCore"
    archiveClassifier = ''
    destinationDirectory = file '../target'
    configurations = [project.configurations.shade]
}

artifacts {
    archives shadowJar
}