plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

ext.buildNumber = System.getenv().BUILD_NUMBER ?: "Dev"

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        server {
            workingDirectory project.file('run').canonicalPath
            args '--nogui'
        }
    }
}

//project.archivesBaseName = "${project.archivesBaseName}-forge-${minecraft_version}"

configurations {
    shade
    minecraftLibrary.extendsFrom shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Core library dependency
    shade project(path: ':WhitelistSyncCore', configuration: 'shadow')

    // Used for development. These are added by the user later.
    // Need "minecraftLibrary" so the libraries are used in the dev environment. Without them, the JDBC drivers won't be loaded.
    minecraftLibrary "curse.maven:mysqlconnector-561280:4684944"
    minecraftLibrary "curse.maven:sqliteconnector-560832:3582173"
}

processResources {
    filesMatching(['pack.mcmeta', 'mods.toml', 'META-INF/mods.toml', 'mixins.json', '*.mixins.json']) {
        expand project.properties
    }
}

shadowJar {
    archiveBaseName = "WhitelistSync"
    archiveClassifier = "forge-${minecraft_version}"
    destinationDirectory = file '../target'
    configurations = [project.configurations.shade]
    finalizedBy 'reobfShadowJar'
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
}